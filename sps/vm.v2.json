{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"Date": { "type": "string" },
		"Region": { "type": "string" },
		"TimeZone": { "type": "string" },
		"Description": { "type": "string" },
		"Language": { "type": "string" },
		"ProductName": { "type": "string" },
		"ProductVersion": { "type": "string" },
		"VirtualMachineSlot": { "type": "string" },
		"VirtualMachineAdminUserName": { "type": "string" },
		"VirtualMachineAdminPassword": { "type": "string" },
		"DomainUserName": { "type": "string" },
		"DomainPassword": { "type": "string" }
	},
	"variables": {
		"SYSTEM_BACKSLASH": "\\",
		"Region": "[concat('demo-', parameters('Region'))]",
		"Product": "[concat(parameters('ProductName'), parameters('ProductVersion'))]",
		"ResourceGroupName": "[concat('Demo_', toUpper(parameters('Region')), '_RG')]",
		"StorageAccountName": "[concat('demo', parameters('Region'), 'storaccount')]",
		"StorageAccountUri": "[concat('https://', variables('StorageAccountName'), '.blob.core.windows.net/')]",
		"VirtualMachineName": "[concat(parameters('Region'), '-', parameters('Description'), '-', parameters('Language'), '-', parameters('VirtualMachineSlot'))]",
		"VirtualMachineVmSize": "Standard_DS1_v2",
		"VirtualMachineVnetName": "[concat(variables('Region'), '-vnet')]",
		"VirtualMachineSubnetName": "[concat(variables('VirtualMachineVnetName'), '-subnet')]",
		"VirtualMachineVnetID": "[resourceId(variables('ResourceGroupName'), 'Microsoft.Network/virtualNetworks', variables('VirtualMachineVnetName'))]",
		"VirtualMachineSubnetRef": "[concat(variables('VirtualMachineVnetID'), '/subnets/', variables('VirtualMachineSubnetName'))]",
		"VirtualMachineNicName": "[concat(variables('VirtualMachineName'), '-nic')]",
		"VirtualMachineIpConfigName": "[concat(variables('VirtualMachineName'), '-ipconfig')]",
		"OsDiskName": "[concat(variables('VirtualMachineName'), '-', uniqueString(resourceGroup().id, parameters('Date')), '.vhd')]",
		"OsDiskUri": "[concat(variables('StorageAccountUri'), 'vhd-vms/', variables('OsDiskName'))]",
		"OsDiskTemplateName": "[concat('demo-all-', variables('Product'), '-vhdtemplate.vhd')]",
		"OsDiskTemplateUri": "[concat(variables('StorageAccountUri'), 'templates/', variables('OsDiskTemplateName'))]",
		"OsDiskCleanUri": "[concat(variables('StorageAccountUri'), 'templates/demo-all-clean-vhdtemplate.vhd')]",
		"PublicIPAdressName": "[concat(variables('VirtualMachineName'), '-ip')]",
		"PublicIPAdressDnsName": "[variables('VirtualMachineName')]",
		"NetworkSecurityName": "[concat(variables('VirtualMachineName'), '-nsg')]",
		"Domain": "[concat(variables('Region'), '.local')]",
		"DomainUser": "[concat(variables('Domain'), variables('SYSTEM_BACKSLASH'), parameters('DomainUserName'))]",
		"DomainOUPath": "[concat('OU=', parameters('Language'), ',OU=', variables('Region'), '-Computers', ',OU=', variables('Region'), ',DC=', variables('Region'), ',DC=local')]"
	},
	"resources": [
		{
			"name": "[variables('PublicIPAdressName')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"location": "[resourceGroup().location]",
			"apiVersion": "2016-03-30",
			"tags": { "displayName": "PublicIPAdress" },
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[variables('PublicIPAdressDnsName')]"
				}
			}
		},
		{
			"name": "[variables('VirtualMachineNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2016-03-30",
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIPAdressName'))]"
			],
			"tags": { "displayName": "NetworkInterface" },
			"properties": {
				"ipConfigurations": [
					{
						"name": "[variables('VirtualMachineIpConfigName')]",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('VirtualMachineSubnetRef')]"
							},
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIPAdressName'))]"
							}
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NetworkSecurityName'))]"
				}
			}
		},
		{
			"name": "[variables('VirtualMachineName')]",
			"type": "Microsoft.Compute/virtualMachines",
			"location": "[resourceGroup().location]",
			"apiVersion": "2017-03-30",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualMachineNicName'))]"
			],
			"tags": { "displayName": "VirtualMachine" },
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('VirtualMachineVmSize')]"
				},
				"osProfile": {
					"computerName": "[variables('VirtualMachineName')]",
					"adminUsername": "[parameters('VirtualMachineAdminUsername')]",
					"adminPassword": "[parameters('VirtualMachineAdminPassword')]"
				},
				"storageProfile": {
					"osDisk": {
						"osType": "Windows",
						"name": "[variables('OsDiskName')]",
						"image": {
							"uri": "[if(equals(parameters('Description'), 'clean'), variables('OsDiskCleanUri'), variables('OsDiskTemplateUri'))]"
						},
						"vhd": {
							"uri": "[variables('OsDiskUri')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualMachineNicName'))]"
						}
					]
				}
			}
		},
		{
			"name": "[variables('NetworkSecurityName')]",
			"type": "Microsoft.Network/networkSecurityGroups",
			"location": "[resourceGroup().location]",
			"apiVersion": "2017-06-01",
			"tags": { "displayName": "NetworkSecurity" },
			"properties": {
				"securityRules": [
					{
						"name": "default-allow-rdp",
						"properties": {
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "3389",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 1000,
							"direction": "Inbound"
						}
					},
					{
						"name": "allow-http",
						"properties": {
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "80",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 1010,
							"direction": "Inbound"
						}
					},
					{
						"name": "allow_https",
						"properties": {
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "443",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 1020,
							"direction": "Inbound"
						}
					},
					{
						"name": "allow-http-8080-mobileserver",
						"properties": {
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "8080",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 990,
							"direction": "Inbound"
						}
					},
					{
						"name": "allow-tls-587-gmail-smtp",
						"properties": {
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "587",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 1040,
							"direction": "Inbound"
						}
					}
				]
			}
		},
		{
			"name": "[concat(variables('VirtualMachineName'), '/joindomain')]",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"location": "[resourceGroup().location]",
			"apiVersion": "2017-03-30",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('VirtualMachineName'))]"
			],
			"tags": { "displayName": "DomainJoin" },
			"properties": {
				"publisher": "Microsoft.Compute",
				"type": "JsonADDomainExtension",
				"typeHandlerVersion": "1.3",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"Name": "[variables('Domain')]",
					"User": "[variables('DomainUser')]",
					"OUPath": "[variables('DomainOUPath')]",
					"Options": "3",
					"Restart": "true"
				},
				"protectedSettings": {
					"Password": "[parameters('DomainPassword')]"
				}
			}
		},
		{
			"name": "[concat(variables('VirtualMachineName'), '/startup')]",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"location": "[resourceGroup().location]",
			"apiVersion": "2017-03-30",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('VirtualMachineName'))]"
			],
			"tags": { "displayName": "StartupScript" },
			"properties": {
				"publisher": "Microsoft.Compute",
				"type": "CustomScriptExtension",
				"typeHandlerVersion": "1.4",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": ["https://raw.githubusercontent.com/runitat/azuredeployment/master/sps/startup.ps1"],
					"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File startup.ps1"
				}
			}
		},
		{
			"name": "[concat('shutdown-computevm-', variables('VirtualMachineName'))]",
			"type": "Microsoft.DevTestLab/schedules",
			"location": "[resourceGroup().location]",
			"apiVersion": "2016-05-15",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('VirtualMachineName'))]"
			],
			"tags": { "displayName": "AutoShutdown" },
			"properties": {
				"status": "Enabled",
				"taskType": "ComputeVmShutdownTask",
				"dailyRecurrence": {
					"time": "1900"
				},
				"timeZoneId": "[parameters('TimeZone')]",
				"notificationSettings": {
					"status": "Disabled"
				},
				"targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('VirtualMachineName'))]"
			}
		}
	]
}